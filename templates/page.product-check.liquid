<div class="bg-gray-100 p-8">
    <div class="max-w-7xl mx-auto">
        <!-- Filter Form -->
        <div class="bg-white p-6 rounded-lg shadow-md mb-8">
            <h2 class="text-xl font-bold mb-4">Filter Products that are not published to the online store</h2>
            <form id="filterForm" class="space-y-4">
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div>
                        <label class="block text-sm font-medium text-gray-700">Tags (comma separated)</label>
                        <input type="text" id="tags" name="tags" 
                               class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500"
                               value="department-mens,collection-sale-all,subdepartment-underwear">
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700">Product Type</label>
                        <input type="text" id="type" name="type" 
                               class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500">
                    </div>
                </div>
                <button type="submit" 
                        class="inline-flex justify-center rounded-md border border-transparent bg-indigo-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2">
                    Filter Products
                </button>
            </form>
        </div>

        <!-- Loading State -->
        <div id="loading" class="hidden">
            <div class="flex justify-center items-center">
                <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-indigo-600"></div>
            </div>
        </div>

        <!-- Results Table -->
        <div class="bg-white shadow-md rounded-lg overflow-hidden">
            <table id="resultsTable" class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                    <tr>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Image</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Title</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Stock Status</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Publications</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200" id="resultsBody">
                    <!-- Skeleton Loading Row -->
                    <tr id="skeletonRow" class="hidden">
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="h-20 w-20 bg-gray-200 animate-pulse"></div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="h-4 bg-gray-200 rounded w-3/4 animate-pulse"></div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="h-4 bg-gray-200 rounded w-1/2 animate-pulse"></div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="h-4 bg-gray-200 rounded w-1/4 animate-pulse"></div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="h-4 bg-gray-200 rounded w-1/2 animate-pulse"></div>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>

<script>
    document.getElementById('filterForm').addEventListener('submit', async (e) => {
        e.preventDefault();
        const tags = document.getElementById('tags').value;
        const type = document.getElementById('type').value;
        
        // Get elements and check if they exist
        const loadingElement = document.getElementById('loading');
        const skeletonRow = document.getElementById('skeletonRow');
        const resultsBody = document.getElementById('resultsBody');

        // Show loading state and skeleton row if elements exist
        if (loadingElement) loadingElement.classList.remove('hidden');
        if (skeletonRow) skeletonRow.classList.remove('hidden');
        if (resultsBody) resultsBody.innerHTML = '';

        try {
            const url = new URL('https://oddballs-data--development.gadget.app/apps/oddballs-data/filtered-products');
            if (tags) url.searchParams.append('tags', tags);
            if (type) url.searchParams.append('type', type);

            const response = await fetch(url);
            const data = await response.json();

            displayResults(data.products);
        } catch (error) {
            console.error('Error fetching data:', error);
            alert('Error fetching data. Please try again.');
        } finally {
            // Hide loading state and skeleton row if elements exist
            if (loadingElement) loadingElement.classList.add('hidden');
            if (skeletonRow) skeletonRow.classList.add('hidden');
        }
    });

    function displayResults(products) {
        const tbody = document.getElementById('resultsBody');
        tbody.innerHTML = '';

        products.forEach(({product}) => {
            // Check if any variant is in stock
            const hasStockAvailable = product.variants.some(v => v.availableForSale);
            
            // Check if product is NOT in online store
            const isNotInOnlineStore = !product.publications.some(p => 
                p.name === "Online Store" && p.isPublished
            );
            
            // Format publications for tooltip - each on new line
            const publicationsText = product.publications
                .filter(p => p.isPublished)
                .map(p => `<div class="text-sm py-1">${p.name}</div>`)
                .join('');
            
            // Calculate stock levels
            const totalVariants = product.variants.length;
            const lowStockVariants = product.variants.filter(v => 
                v.inventory_quantity < 5 && v.inventory_quantity > 0
            ).length;
            const noStockVariants = product.variants.filter(v => 
                v.inventory_quantity === 0 || !v.availableForSale
            ).length;
            
            // Only display products that have stock but are NOT in online store
            if (hasStockAvailable && isNotInOnlineStore) {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td class="px-6 py-4 whitespace-nowrap">
                        <img src="${product.image?.src || ''}" alt="${product.title}" class="h-20 w-20 object-cover">
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        <div class="text-sm font-medium text-gray-900">${product.title}</div>
                        <div class="text-sm text-gray-500">Scope: ${product.published_scope}</div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        <div class="space-y-2">
                            <div class="relative inline-block group">
                                <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800 hover:cursor-help">
                                    In Stock (${product.variants.reduce((sum, v) => sum + (v.inventory_quantity || 0), 0)} total)
                                </span>
                                <div class="hidden group-hover:block absolute left-0 mt-2 w-64 bg-white border border-gray-200 rounded-lg shadow-lg z-50 p-4">
                                    <h4 class="font-semibold text-sm mb-2">Variant Stock Levels</h4>
                                    ${product.variants.map(variant => `
                                        <div class="text-xs mb-1 flex justify-between">
                                            <span class="${variant.inventory_quantity < 5 ? 'text-red-600' : 'text-gray-600'}">${variant.title}</span>
                                            <span class="font-medium">${variant.inventory_quantity || 0}</span>
                                        </div>
                                    `).join('')}
                                </div>
                            </div>
                            ${lowStockVariants > 0 ? `
                                <div class="text-xs text-amber-600 font-medium">
                                    ${lowStockVariants} of ${totalVariants} variants low stock
                                </div>
                            ` : ''}
                            ${noStockVariants > 0 ? `
                                <div class="text-xs text-red-600 font-medium">
                                    ${noStockVariants} of ${totalVariants} variants out of stock
                                </div>
                            ` : ''}
                        </div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                        <span class="group relative">
                            ${product.publications.filter(p => p.isPublished).length}
                            <div class="opacity-0 group-hover:opacity-100 transition-opacity duration-300 absolute left-0 mt-2 w-64 bg-white border border-gray-200 rounded-lg shadow-lg z-50 p-4">
                                <h4 class="font-semibold text-sm mb-2">Published On</h4>
                                <div class="space-y-1">
                                    ${publicationsText || 'No publications'}
                                </div>
                            </div>
                        </span>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                        <a href="https://admin.shopify.com/store/myoddballs/products/${product.id.split('/').pop()}" 
                           target="_blank"
                           class="text-indigo-600 hover:text-indigo-900">
                            View in Admin
                        </a>
                    </td>
                `;
                tbody.appendChild(row);
            }
        });

        if (tbody.children.length === 0) {
            tbody.innerHTML = `
                <tr>
                    <td colspan="5" class="px-6 py-4 text-center text-gray-500">
                        No products found matching the criteria
                    </td>
                </tr>
            `;
        }
    }

    // Trigger initial load
    document.getElementById('filterForm').dispatchEvent(new Event('submit'));
</script>