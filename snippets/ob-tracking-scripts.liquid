{% comment %}
<!-- Twitter universal website tag code -->
<script>
    try {
          !function(e,t,n,s,u,a){e.twq||(s=e.twq=function(){s.exe?s.exe.apply(s,arguments):s.queue.push(arguments);
          },s.version='1.1',s.queue=[],u=t.createElement(n),u.async=!0,u.src='//static.ads-twitter.com/uwt.js',
          a=t.getElementsByTagName(n)[0],a.parentNode.insertBefore(u,a))}(window,document,'script');
          // Insert Twitter Pixel ID and Standard Event data below
          twq('init','o0hrf');
          twq('track','PageView');
    } catch (twtr_err) {
        console.log("Error:" + twtr_err.message);
    }
</script>
<!-- End Twitter universal website tag code -->

<!-- BING UET tracking code  -->
{%  comment  %}
<script>(function(w,d,t,r,u){var f,n,i;w[u]=w[u]||[],f=function(){var o={ti:"25036479"};o.q=w[u],w[u]=new UET(o),w[u].push("pageLoad")},n=d.createElement(t),n.src=r,n.async=1,n.onload=n.onreadystatechange=function(){var s=this.readyState;s&&s!=="loaded"&&s!=="complete"||(f(),n.onload=n.onreadystatechange=null)},i=d.getElementsByTagName(t)[0],i.parentNode.insertBefore(n,i)})(window,document,"script","//bat.bing.com/bat.js","uetq");</script> 
{%  endcomment  %}
  
<script>
  try {
      (function(w,d,t,r,u)
      {
        var f,n,i;
        w[u]=w[u]||[],f=function()
        {
          var o={ti:"27034121"}; 
          o.q=w[u],w[u]=new UET(o),w[u].push("pageLoad") 
        },
        n=d.createElement(t),n.src=r,n.async=1,n.onload=n.onreadystatechange=function()
        {
          var s=this.readyState;
          s&&s!=="loaded"&&s!=="complete"||(f(),n.onload=n.onreadystatechange=null)
        },
        i=d.getElementsByTagName(t)[0],i.parentNode.insertBefore(n,i)
      })
      (window,document,"script","//bat.bing.com/bat.js","uetq");
  } catch (bingtracking_err) {
      console.log("Error:" + bingtracking_err.message);
  }
</script>
<!-- BING UET tracking END -->

<!-- Google tag (gtag.js) -->

<!-- <script async src="https://www.googletagmanager.com/gtag/js?id=G-HV5RF4RS4K"></script> -->


<script>

 window.dataLayer = window.dataLayer || [];

  // function gtag() { dataLayer.push(arguments); }

  // gtag('js', new Date());

  

  // //init gtag without pageview

  // gtag('config', 'G-HV5RF4RS4K', {

  //   send_page_view: false

  // });


  // //send a/b test event

  // gtag('event', 'user_cohort_assigned', {

  //   userCohort: "{{ theme_ab_flag }}" // Outputs: "theme-a" or "theme-b"

  // });

function checkAndSetCookie(name, value) {
    try {
        // Check if cookie exists
        const existingCookie = document.cookie
            .split(';')
            .find(row => row.trim().startsWith(name + '='));
        
        if (!existingCookie) {
            // Cookie doesn't exist, set it
            let cookieString = `${encodeURIComponent(name)}=${encodeURIComponent(value)};path=/;SameSite=Strict`;
            
            if (window.location.protocol === 'https:') {
                cookieString += ';Secure';
            }
            
            document.cookie = cookieString;
            console.warn('cookieString set:', cookieString);
            return false; // indicates cookie was not previously set
        }
        return true; // indicates cookie was already set
    } catch (error) {
        console.warn('Cookie operation failed:', error.message);
        return false;
    }
}

// Example usage:
// const wasSet = checkAndSetCookie('username', 'john_doe');
// if (!wasSet) console.log('Cookie was just set');
checkAndSetCookie('user_cohort_assigned', '{{ theme_ab_flag }}');

</script> 
{% endcomment %}
<script>

function checkAndSetCookie(name, value) {
    try {
        // Always set the cookie, whether it exists or not
        let cookieString = `${encodeURIComponent(name)}=${encodeURIComponent(value)};path=/;SameSite=Strict`;

        if (window.location.protocol === 'https:') {
            cookieString += ';Secure';
        }

        document.cookie = cookieString;
        console.warn('cookieString set:', cookieString);

        return true; // always returns true since cookie is always set
    } catch (error) {
        console.warn('Cookie operation failed:', error.message);
        return false;
    }
}

// Example usage:
// const wasSet = checkAndSetCookie('username', 'john_doe');
// if (!wasSet) console.log('Cookie was just set');
checkAndSetCookie('user_cohort_assigned', '{{ theme_ab_flag }}');
  
</script>